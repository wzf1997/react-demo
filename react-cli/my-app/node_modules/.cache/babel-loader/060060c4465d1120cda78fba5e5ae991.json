{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/react-cli/my-app/src/calctor/index.js\";\nimport React from 'react';\nimport CalcShow from \"./calcShow\";\nimport Animate from \"./animate\";\nimport { showNumberAction } from \"../store/actionCreators\";\nimport { connect } from \"react-redux\";\n\nclass Calctor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"none\"\n    };\n    this.showNumber = this.showNumber.bind(this);\n    this.clearNumber = this.clearNumber.bind(this);\n    this.comparyNumber = this.comparyNumber.bind(this);\n    this.showResult = this.showResult.bind(this);\n    this.showZero = this.showZero.bind(this);\n    this.showCircle = this.showCircle.bind(this);\n  }\n\n  render() {\n    const showNumberAction = this.props.showNumberAction; //判断动画组件是否加载   \n\n    let jsx = this.state.display === \"block\" ? React.createElement(Animate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }) : \"\";\n    return React.createElement(\"div\", {\n      style: {\n        display: this.props.display\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(CalcShow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"calc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"methods\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: this.clearNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"AC\"), React.createElement(\"td\", {\n      onClick: this.comparyNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"+/-\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"%\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\xF7\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"9\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"-\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"td\", {\n      onClick: showNumberAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"+\"))), React.createElement(\"tfoot\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: this.showZero,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      onClick: this.showCircle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \".\"), React.createElement(\"td\", {\n      onClick: this.showResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"=\")))), jsx)))));\n  } // 显示数字的\n\n\n  showNumber(e) {\n    // this.state.result.push(e.target.value)\n    const newValue = e.target.innerHTML;\n    this.setState(oldstate => {\n      return {\n        result: oldstate.result.concat(newValue)\n      };\n    });\n  } // 加负号\n\n\n  comparyNumber() {\n    let arrAdd = [\"-\"]; // 获得当前数组\n\n    let arr = this.state.result; //  合并成一条字符串 \n\n    let str = arr.join(\"\");\n\n    if (this.state.result.length === 0) {\n      return;\n    } // 判断当前字符串大于0\n    // eslint-disable-next-line\n\n\n    if (Number(str) > 0 && Number(str) !== NaN) {\n      this.setState(oldstate => {\n        return {\n          result: arrAdd.concat(oldstate.result)\n        };\n      });\n    } // 如果当前字符串小于0  \n    // eslint-disable-next-line\n\n\n    if (Number(str) < 0 && Number(str) !== NaN) {\n      const arr = this.state.result;\n      const newArr = arr.slice(1);\n      this.setState(oldstate => {\n        return {\n          result: newArr\n        };\n      });\n    }\n  } //清除当前显示屏上所有的数字\n\n\n  clearNumber() {\n    const arr = [];\n    this.setState({\n      result: arr\n    });\n  } //显示结果\n\n\n  showResult() {\n    this.setState({\n      display: \"block\"\n    }); //获得当前数组\n\n    let arr = this.state.result;\n    let str = arr.join(\"\"); //判断当前字符串中有没有 乘号和除号  有乘号和除号全部替换成 对应的符号\n\n    try {\n      if (str.indexOf(\"×\") !== -1 || str.indexOf(\"÷\") !== -1) {\n        //乘法的时候将显示屏中所有的乘号都替换成*\n        const str1 = str.replace(/×/g, \"*\");\n        str = str1.replace(/÷/g, \"/\");\n      } //eslint-disable-next-line\n\n\n      let str3 = eval(str);\n      let newArr = [str3];\n      setTimeout(() => {\n        this.setState({\n          result: newArr,\n          display: \"none\"\n        });\n      }, 1500);\n    } catch (error) {\n      const newArr = [].push(error);\n      setTimeout(() => {\n        this.setState({\n          result: newArr\n        });\n      }, 1500);\n    }\n  } //对于0的处理\n\n\n  showZero(e) {\n    let arr = this.state.result;\n    const newValue = e.target.innerHTML;\n\n    if (arr[0] !== \"0\") {\n      this.setState(oldstate => {\n        return {\n          result: oldstate.result.concat(newValue)\n        };\n      });\n    }\n  } //对于点的处理\n\n\n  showCircle(e) {\n    let arr = this.state.result;\n    const newValue = e.target.innerHTML;\n\n    if (arr[0] !== \".\" && arr[arr.length - 1] !== \".\") {\n      this.setState(oldstate => {\n        return {\n          result: oldstate.result.concat(newValue)\n        };\n      });\n    }\n  }\n\n}\n\nconst stateToProps = state => {\n  return {};\n};\n\nconst dispatchToProps = {\n  showNumberAction\n};\nexport default connect(stateToProps, dispatchToProps)(Calctor);","map":{"version":3,"sources":["/Users/apple/Desktop/react-cli/my-app/src/calctor/index.js"],"names":["React","CalcShow","Animate","showNumberAction","connect","Calctor","Component","constructor","props","state","display","showNumber","bind","clearNumber","comparyNumber","showResult","showZero","showCircle","render","jsx","e","newValue","target","innerHTML","setState","oldstate","result","concat","arrAdd","arr","str","join","length","Number","NaN","newArr","slice","indexOf","str1","replace","str3","eval","setTimeout","error","push","stateToProps","dispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CalcShow from \"./calcShow\"\nimport Animate from \"./animate\"\nimport {showNumberAction} from \"../store/actionCreators\"\nimport {connect} from \"react-redux\"\n\nclass Calctor extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            display:\"none\"\n        }\n        this.showNumber=this.showNumber.bind(this)\n        this.clearNumber=this.clearNumber.bind(this)\n        this.comparyNumber= this.comparyNumber.bind(this)\n        this.showResult=this.showResult.bind(this)\n        this.showZero=this.showZero.bind(this)\n        this.showCircle=this.showCircle.bind(this)\n    }\n    render(){\n        const { showNumberAction }=this.props\n        //判断动画组件是否加载   \n        let jsx=this.state.display===\"block\"?<Animate/>:\"\"\n        return(\n            <div style={{display:this.props.display}}>\n                <div className=\"tab\">\n                    <div className=\"index\">\n                        {/*  显示组件 */}\n                        <CalcShow></CalcShow>\n                            <div className=\"calc\">\n                                <div className=\"methods\">\n                                    <table className=\"table\">\n                                        <tbody>\n                                            <tr className=\"first\">\n                                                <td onClick={this.clearNumber}>AC</td>\n                                                <td onClick={this.comparyNumber}>+/-</td>\n                                                <td onClick={showNumberAction}>%</td>\n                                                <td onClick={showNumberAction}>÷</td>\n                                            </tr>\n                                            <tr>\n                                                <td onClick={showNumberAction}>7</td>\n                                                <td onClick={showNumberAction}>8</td>\n                                                <td onClick={showNumberAction}>9</td>\n                                                <td onClick={showNumberAction}>×</td>\n                                            </tr>\n                                            <tr>\n                                                <td onClick={showNumberAction}>4</td>\n                                                <td onClick={showNumberAction}>5</td>\n                                                <td onClick={showNumberAction}>6</td>\n                                                <td onClick={showNumberAction}>-</td>\n                                            </tr>\n                                            <tr>\n                                                <td onClick={showNumberAction}>1</td>\n                                                <td onClick={showNumberAction}>2</td>\n                                                <td onClick={showNumberAction}>3</td>\n                                                <td onClick={showNumberAction}>+</td>\n                                            </tr>\n                                        </tbody>\n                                        <tfoot>\n                                            <tr>\n                                                <td onClick={this.showZero}>0</td>\n                                                <td ></td>\n                                                <td onClick={this.showCircle}>.</td>\n                                                <td onClick={this.showResult}>=</td>\n                                            </tr>\n                                        </tfoot>\n                                    </table>\n                                    {/* 是否加载动画组件 */}\n                                    {jsx}\n                                </div>\n                            </div>\n                    </div>\n                </div>\n            </div>\n        )        \n    }\n    // 显示数字的\n    showNumber(e){\n        // this.state.result.push(e.target.value)\n        const newValue=e.target.innerHTML\n        this.setState(oldstate =>{\n            return {result:oldstate.result.concat(newValue)}\n        })\n    } \n    // 加负号\n    comparyNumber(){\n        let arrAdd=[\"-\"]\n        // 获得当前数组\n        let arr=this.state.result \n        //  合并成一条字符串 \n        let str=arr.join(\"\")\n        if(this.state.result.length===0){\n            return \n        }\n        // 判断当前字符串大于0\n        // eslint-disable-next-line\n        if(Number(str)>0&&Number(str)!==NaN){\n            this.setState(oldstate=>{return{result:arrAdd.concat(oldstate.result)}})\n        } \n        // 如果当前字符串小于0  \n        // eslint-disable-next-line\n        if(Number(str)<0&&Number(str)!==NaN){\n            const arr=this.state.result\n            const newArr=arr.slice(1)\n            this.setState(oldstate=>{return{result: newArr}});\n        } \n    }  \n\n    //清除当前显示屏上所有的数字\n    clearNumber(){\n        const arr=[]\n        this.setState({result: arr})\n    }\n    //显示结果\n    showResult(){\n        this.setState({display:\"block\"})\n        //获得当前数组\n        let arr=this.state.result\n        let str=arr.join(\"\") \n        //判断当前字符串中有没有 乘号和除号  有乘号和除号全部替换成 对应的符号\n        try{\n            if(str.indexOf(\"×\")!==-1 ||str.indexOf(\"÷\")!==-1){\n                //乘法的时候将显示屏中所有的乘号都替换成*\n                const str1=str.replace(/×/g,\"*\")\n                str=str1.replace(/÷/g,\"/\")\n            }\n            //eslint-disable-next-line\n            let str3=eval(str)\n            let newArr=[str3]\n            setTimeout(()=>{this.setState({result:newArr,display:\"none\"})},1500)\n\n        }\n        catch (error) {\n            const newArr=[].push(error)\n            setTimeout(()=>{\n                this.setState({result:newArr})\n            },1500)\n        }\n    }\n    //对于0的处理\n    showZero(e){\n        let arr=this.state.result\n        const newValue=e.target.innerHTML\n        if(arr[0]!==\"0\"){\n            this.setState(oldstate=>{return{result: oldstate.result.concat(newValue)}})\n        }\n    }\n    //对于点的处理\n    showCircle(e){\n        let arr=this.state.result\n        const newValue=e.target.innerHTML\n        if(arr[0]!==\".\"&&arr[arr.length-1]!==\".\"){\n            this.setState(oldstate =>{\n            return{result:oldstate.result.concat(newValue)}})\n        }\n    }\n}\n\nconst stateToProps=(state)=>{\n    return {\n\n    }\n}\nconst dispatchToProps={\n    showNumberAction\n}\n\nexport default connect(stateToProps,dispatchToProps)(Calctor)"]},"metadata":{},"sourceType":"module"}