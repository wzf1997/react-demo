{"ast":null,"code":"import { USERLIST, SELECTLIST, SHOWDATE1, SHOWDATE2, INITIALIZE, PAGE1, PAGE2, PAGE3, PREVPAGE, NEXTPAGE } from \"./actionTypes\"; //用fetch请求到数据\n\nexport const showUserAction = () => {\n  return dispatch => {\n    fetch(\"http://pre.zhushang.net/Supplychain/getDataForHavePost\", {\n      method: \"post\",\n      mode: \"cors\",\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      },\n      body: \"type=1&page=1&num=20\"\n    }).then(response => {\n      return response.json();\n    }).then(responseText => {\n      const arr1 = responseText.slice(0, 8);\n      const arr2 = responseText.slice(10);\n      const arr = [...arr1, ...arr2];\n      const action = {\n        type: USERLIST,\n        value: arr\n      };\n      dispatch(action);\n    });\n  };\n}; // 按钮点击查询的功能\n\nexport const selectListAction = () => {\n  return (dispatch, getState) => {\n    const time1 = new Date(getState().dateValue1).getTime();\n    const time2 = new Date(getState().dateValue2).getTime();\n    const arr = getState().userlis;\n    const newarr = arr.filter(elem => {\n      const litime = new Date(elem.create_time.slice(0, 10)).getTime();\n      return litime >= time1 && litime <= time2;\n    });\n    const action = {\n      type: SELECTLIST,\n      value: newarr\n    };\n    dispatch(action);\n  };\n}; //将日期1的值传入到state中\n\nexport const showDate1Action = e => {\n  return dispatch => {\n    const action = {\n      type: SHOWDATE1,\n      value: e.target.value\n    };\n    dispatch(action);\n  };\n}; //将日期2的值传入到state中\n\nexport const showDate2Action = e => {\n  return dispatch => {\n    const action = {\n      type: SHOWDATE2,\n      value: e.target.value\n    };\n    dispatch(action);\n  };\n}; //根据查询的数据选择本页展示几条数据\n\nexport const selectDateAction = e => {\n  return (dispatch, getState) => {\n    //初始化下一页数字为1\n    const action = {\n      type: INITIALIZE\n    };\n    dispatch(action);\n    let pshow = Number(e.target.value);\n    let pcount = getState().selectlis.length;\n    let arr = getState().selectlis; //判断当前页面有几条数据\n\n    if (pcount / pshow <= 3 && pcount / pshow > 2) {\n      const arr1 = arr.slice(0, pshow);\n      const arr2 = arr.slice(pshow, 2 * pshow);\n      const arr3 = arr.slice(2 * pshow);\n      const action = {\n        type: PAGE3,\n        arr1,\n        arr2,\n        arr3\n      };\n      dispatch(action);\n    } else if (pcount / pshow > 1 && pcount / pshow <= 2) {\n      const arr4 = arr.slice(0, pshow);\n      const arr5 = arr.slice(pshow);\n      const action = {\n        type: PAGE2,\n        arr4,\n        arr5\n      };\n      dispatch(action);\n    } else {\n      const arr6 = arr.slice(0, arr.lenth);\n      const action = {\n        type: PAGE1,\n        arr6\n      };\n      dispatch(action);\n    }\n  };\n}; //按钮点击上一页\n\nexport const prevPageAction = e => {\n  return (dispatch, getState) => {};\n}; //按钮点击下一页\n\nexport const nextPageAction = e => {\n  return (dispatch, getState) => {\n    let prevpage = getState().prevpage;\n    let nextpage = getState().nextpage;\n    const arrPage2 = getState().arr2;\n    const arrPage3 = getState().arr3;\n\n    if (prevpage < nextpage) {\n      prevpage++;\n      this.setState({\n        prevpage: prevpage\n      });\n    }\n\n    if (prevpage === 3) {\n      this.setState({\n        pageShow: arrPage3\n      });\n    }\n\n    if (prevpage === 2) {\n      this.setState({\n        pageShow: arrPage2\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/apple/Desktop/react-cli/my-app/src/store/actionCreators.js"],"names":["USERLIST","SELECTLIST","SHOWDATE1","SHOWDATE2","INITIALIZE","PAGE1","PAGE2","PAGE3","PREVPAGE","NEXTPAGE","showUserAction","dispatch","fetch","method","mode","headers","body","then","response","json","responseText","arr1","slice","arr2","arr","action","type","value","selectListAction","getState","time1","Date","dateValue1","getTime","time2","dateValue2","userlis","newarr","filter","elem","litime","create_time","showDate1Action","e","target","showDate2Action","selectDateAction","pshow","Number","pcount","selectlis","length","arr3","arr4","arr5","arr6","lenth","prevPageAction","nextPageAction","prevpage","nextpage","arrPage2","arrPage3","setState","pageShow"],"mappings":"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","sourcesContent":["import {USERLIST,SELECTLIST,SHOWDATE1,SHOWDATE2,INITIALIZE,PAGE1,PAGE2,PAGE3,PREVPAGE,NEXTPAGE} from \"./actionTypes\"\n//用fetch请求到数据\nexport const showUserAction = ()=>{\n    return (dispatch)=>{\n        fetch(\"http://pre.zhushang.net/Supplychain/getDataForHavePost\",{\n            method:\"post\",\n            mode:\"cors\",\n            headers:{\"Content-type\":\"application/x-www-form-urlencoded\"},\n            body:\"type=1&page=1&num=20\"\n        }).then(response=>{\n            return response.json()\n        }).then((responseText)=>{\n            const arr1=responseText.slice(0,8)\n            const arr2=responseText.slice(10)\n            const arr=[...arr1,...arr2]\n            const action={\n                type:USERLIST,\n                value:arr\n            }\n            dispatch(action)\n        })\n    }\n}\n// 按钮点击查询的功能\nexport const selectListAction=()=>{\n    return (dispatch,getState)=>{\n        const time1=new Date(getState().dateValue1).getTime()\n        const time2=new Date(getState().dateValue2).getTime()\n        const arr=getState().userlis\n        const newarr=arr.filter((elem)=>{\n            const litime=new Date(elem.create_time.slice(0,10)).getTime() \n            return litime>=time1&&litime<=time2\n        })\n        const action={\n            type:SELECTLIST,\n            value:newarr\n        }\n        dispatch(action)\n    }\n}\n//将日期1的值传入到state中\nexport const showDate1Action=(e)=>{\n    return (dispatch)=>{\n        const action={\n            type:SHOWDATE1,\n            value:e.target.value\n        }\n        dispatch(action)\n    }\n}\n//将日期2的值传入到state中\nexport const showDate2Action=(e)=>{\n    return (dispatch)=>{\n        const action={\n            type:SHOWDATE2,\n            value:e.target.value\n        }\n        dispatch(action)\n    }\n}\n//根据查询的数据选择本页展示几条数据\nexport const selectDateAction=(e)=>{\n    return (dispatch,getState)=>{\n        //初始化下一页数字为1\n        const action={\n            type:INITIALIZE\n        }\n        dispatch(action) \n        let pshow= Number(e.target.value)  \n        let pcount=getState().selectlis.length\n        let arr=getState().selectlis \n        //判断当前页面有几条数据\n        if(pcount/pshow<=3&&pcount/pshow>2){\n            const arr1=arr.slice(0,pshow)\n            const arr2=arr.slice(pshow,2*pshow)\n            const arr3=arr.slice(2*pshow)\n            const action={\n                type:PAGE3,\n                arr1,arr2,arr3\n            }\n            dispatch(action)\n        }\n        else if(pcount/pshow>1&&pcount/pshow<=2){\n            const arr4=arr.slice(0,pshow)\n            const arr5=arr.slice(pshow) \n            const action={\n                type:PAGE2,\n                arr4,arr5\n            }\n            dispatch(action)\n        }\n        else{\n            const arr6=arr.slice(0,arr.lenth)\n            const action={\n                type:PAGE1,\n                arr6\n            }\n            dispatch(action)\n        }\n    }\n}\n//按钮点击上一页\nexport const prevPageAction=(e)=>{\n    return (dispatch,getState)=>{\n\n    }\n}\n//按钮点击下一页\nexport const nextPageAction=(e)=>{\n    return (dispatch,getState)=>{\n        let prevpage=getState().prevpage\n        let nextpage=getState().nextpage\n        const arrPage2=getState().arr2\n        const arrPage3=getState().arr3\n        if(prevpage<nextpage){\n            prevpage++\n            this.setState({prevpage:prevpage})\n        }\n        if(prevpage===3){\n            this.setState({pageShow:arrPage3})\n        }\n        if(prevpage===2){\n            this.setState({pageShow:arrPage2})\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}