{"ast":null,"code":"import { USERLIST, SELECTLIST, SHOWDATE1, SHOWDATE2, INITIALIZE, PAGE1, PAGE2, PAGE3, PREVPAGE1, PREVPAGE2, PREVPAGE3, PREVPAGE4, NEXTPAGE1, NEXTPAGE2, NEXTPAGE3, SHOWNUMBER, COMPARYNUMBER1, COMPARYNUMBER2, CLEARNUMBER, SHOWZERO, SHOWCIRCLE, SHOWANIMATE } from \"./actionTypes\"; //用fetch请求到数据\n\nexport const showUserAction = () => {\n  return dispatch => {\n    fetch(\"http://pre.zhushang.net/Supplychain/getDataForHavePost\", {\n      method: \"post\",\n      mode: \"cors\",\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      },\n      body: \"type=1&page=1&num=20\"\n    }).then(response => {\n      return response.json();\n    }).then(responseText => {\n      const arr1 = responseText.slice(0, 8);\n      const arr2 = responseText.slice(10);\n      const arr = [...arr1, ...arr2];\n      const action = {\n        type: USERLIST,\n        value: arr\n      };\n      dispatch(action);\n    });\n  };\n}; // 按钮点击查询的功能\n\nexport const selectListAction = () => {\n  return (dispatch, getState) => {\n    const time1 = new Date(getState().dateValue1).getTime();\n    const time2 = new Date(getState().dateValue2).getTime();\n    const arr = getState().userlis;\n    const newarr = arr.filter(elem => {\n      const litime = new Date(elem.create_time.slice(0, 10)).getTime();\n      return litime >= time1 && litime <= time2;\n    });\n    const action = {\n      type: SELECTLIST,\n      value: newarr\n    };\n    dispatch(action);\n  };\n}; //将日期1的值传入到state中\n\nexport const showDate1Action = e => {\n  return dispatch => {\n    const action = {\n      type: SHOWDATE1,\n      value: e.target.value\n    };\n    dispatch(action);\n  };\n}; //将日期2的值传入到state中\n\nexport const showDate2Action = e => {\n  return dispatch => {\n    const action = {\n      type: SHOWDATE2,\n      value: e.target.value\n    };\n    dispatch(action);\n  };\n}; //根据查询的数据选择本页展示几条数据\n\nexport const selectDateAction = e => {\n  return (dispatch, getState) => {\n    let pshow = Number(e.target.value);\n    let pcount = getState().selectlis.length;\n    let arr = getState().selectlis; //初始化下一页数字为1\n\n    const action = {\n      type: INITIALIZE,\n      pshow\n    };\n    dispatch(action); //判断当前页面有几条数据\n\n    if (pcount / pshow <= 3 && pcount / pshow > 2) {\n      const arr1 = arr.slice(0, pshow);\n      const arr2 = arr.slice(pshow, 2 * pshow);\n      const arr3 = arr.slice(2 * pshow);\n      const action = {\n        type: PAGE3,\n        arr1,\n        arr2,\n        arr3\n      };\n      dispatch(action);\n    } else if (pcount / pshow > 1 && pcount / pshow <= 2) {\n      const arr4 = arr.slice(0, pshow);\n      const arr5 = arr.slice(pshow);\n      const action = {\n        type: PAGE2,\n        arr4,\n        arr5\n      };\n      dispatch(action);\n    } else {\n      const arr6 = arr.slice(0, arr.lenth);\n      const action = {\n        type: PAGE1,\n        arr6\n      };\n      dispatch(action);\n    }\n  };\n}; //按钮点击上一页\n\nexport const prevPageAction = () => {\n  return (dispatch, getState) => {\n    let prevpage = getState().prevpage;\n    const arrPage1 = getState().arr1;\n    const arrPage2 = getState().arr2;\n    const arrPage3 = getState().arr3;\n\n    if (prevpage > 1) {\n      prevpage--;\n      const action = {\n        type: PREVPAGE1,\n        prevpage\n      };\n      dispatch(action);\n    }\n\n    if (prevpage === 1) {\n      const action = {\n        type: PREVPAGE2,\n        arrPage1\n      };\n      dispatch(action);\n    } else if (prevpage === 2) {\n      const action = {\n        type: PREVPAGE3,\n        arrPage2\n      };\n      dispatch(action);\n    } else {\n      const action = {\n        type: PREVPAGE4,\n        arrPage3\n      };\n      dispatch(action);\n    }\n  };\n}; //按钮点击下一页\n\nexport const nextPageAction = () => {\n  return (dispatch, getState) => {\n    let prevpage = getState().prevpage;\n    let nextpage = getState().nextpage;\n    const arrPage2 = getState().arr2;\n    const arrPage3 = getState().arr3;\n\n    if (prevpage < nextpage) {\n      prevpage++;\n      const action = {\n        type: NEXTPAGE1,\n        prevpage\n      };\n      dispatch(action);\n    }\n\n    if (prevpage === 3) {\n      const action = {\n        type: NEXTPAGE2,\n        arrPage3\n      };\n      dispatch(action);\n    }\n\n    if (prevpage === 2) {\n      const action = {\n        type: NEXTPAGE3,\n        arrPage2\n      };\n      dispatch(action);\n    }\n  };\n}; //计算器数字拼接\n\nexport const showNumberAction = e => {\n  return (dispatch, getState) => {\n    const arr = getState().shownumber;\n    const value = e.target.innerHTML;\n    arr.push(value);\n    const action = {\n      type: SHOWNUMBER,\n      arr\n    };\n    dispatch(action);\n  };\n}; //给数字加﹣号\n\nexport const comparyNumberAction = () => {\n  return (dispatch, getState) => {\n    let arrAdd = [\"-\"]; //获得当前数组\n\n    let arr = getState().shownumber; //合并成一条字符串 \n\n    let str = arr.join(\"\");\n\n    if (arr.length === 0) {\n      return;\n    } //判断当前字符串大于0\n    //eslint-disable-next-line\n\n\n    if (Number(str) > 0 && Number(str) !== NaN) {\n      const action = {\n        type: COMPARYNUMBER1,\n        arr: arrAdd.concat(arr)\n      };\n      dispatch(action);\n    } //如果当前字符串小于0  \n    //eslint-disable-next-line\n\n\n    if (Number(str) < 0 && Number(str) !== NaN) {\n      const newArr = arr.slice(1);\n      const action = {\n        type: COMPARYNUMBER2,\n        arr: newArr\n      };\n      dispatch(action);\n    }\n  };\n}; //清空显示屏\n\nexport const clearNumberAction = () => {\n  return dispatch => {\n    const arr = [];\n    const action = {\n      type: CLEARNUMBER,\n      arr\n    };\n    dispatch(action);\n  };\n}; //对于0的处理\n\nexport const showZeroAction = e => {\n  return (dispatch, getState) => {\n    let arr = getState().shownumber;\n    const newValue = e.target.innerHTML;\n\n    if (arr[0] !== \"0\") {\n      arr.push(newValue);\n      const action = {\n        type: SHOWZERO,\n        arr\n      };\n      dispatch(action);\n    }\n  };\n}; //对于点的处理\n\nexport const showCircleAction = e => {\n  return (dispatch, getState) => {\n    let arr = getState().shownumber;\n    const newValue = e.target.innerHTML;\n\n    if (arr[0] !== \".\" && arr[arr.length - 1] !== \".\") {\n      arr.push(newValue);\n      const action = {\n        type: SHOWCIRCLE,\n        arr\n      };\n      dispatch(action);\n    }\n  };\n}; //计算结果的处理\n\nexport const showResultAction = () => {\n  return (dispatch, getState) => {\n    //显示结果\n    const action = {\n      type: SHOWANIMATE,\n      display: \"block\"\n    };\n    this.setState({\n      display: \"block\"\n    }); //获得当前数组\n\n    let arr = this.state.result;\n    let str = arr.join(\"\"); //判断当前字符串中有没有 乘号和除号  有乘号和除号全部替换成 对应的符号\n\n    try {\n      if (str.indexOf(\"×\") !== -1 || str.indexOf(\"÷\") !== -1) {\n        //乘法的时候将显示屏中所有的乘号都替换成*\n        const str1 = str.replace(/×/g, \"*\");\n        str = str1.replace(/÷/g, \"/\");\n      } //eslint-disable-next-line\n\n\n      let str3 = eval(str);\n      let newArr = [str3];\n      setTimeout(() => {\n        this.setState({\n          result: newArr,\n          display: \"none\"\n        });\n      }, 1500);\n    } catch (error) {\n      const newArr = [].push(error);\n      setTimeout(() => {\n        this.setState({\n          result: newArr\n        });\n      }, 1500);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/apple/Desktop/react-cli/my-app/src/store/actionCreators.js"],"names":["USERLIST","SELECTLIST","SHOWDATE1","SHOWDATE2","INITIALIZE","PAGE1","PAGE2","PAGE3","PREVPAGE1","PREVPAGE2","PREVPAGE3","PREVPAGE4","NEXTPAGE1","NEXTPAGE2","NEXTPAGE3","SHOWNUMBER","COMPARYNUMBER1","COMPARYNUMBER2","CLEARNUMBER","SHOWZERO","SHOWCIRCLE","SHOWANIMATE","showUserAction","dispatch","fetch","method","mode","headers","body","then","response","json","responseText","arr1","slice","arr2","arr","action","type","value","selectListAction","getState","time1","Date","dateValue1","getTime","time2","dateValue2","userlis","newarr","filter","elem","litime","create_time","showDate1Action","e","target","showDate2Action","selectDateAction","pshow","Number","pcount","selectlis","length","arr3","arr4","arr5","arr6","lenth","prevPageAction","prevpage","arrPage1","arrPage2","arrPage3","nextPageAction","nextpage","showNumberAction","shownumber","innerHTML","push","comparyNumberAction","arrAdd","str","join","NaN","concat","newArr","clearNumberAction","showZeroAction","newValue","showCircleAction","showResultAction","display","setState","state","result","indexOf","str1","replace","str3","eval","setTimeout","error"],"mappings":"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","sourcesContent":["import {USERLIST,SELECTLIST,SHOWDATE1,SHOWDATE2,INITIALIZE,PAGE1,PAGE2,PAGE3,PREVPAGE1,PREVPAGE2,PREVPAGE3,PREVPAGE4,NEXTPAGE1,NEXTPAGE2,NEXTPAGE3\n,SHOWNUMBER,COMPARYNUMBER1,COMPARYNUMBER2,CLEARNUMBER,SHOWZERO,SHOWCIRCLE,SHOWANIMATE} from \"./actionTypes\"\n//用fetch请求到数据\nexport const showUserAction = ()=>{\n    return (dispatch)=>{\n        fetch(\"http://pre.zhushang.net/Supplychain/getDataForHavePost\",{\n            method:\"post\",\n            mode:\"cors\",\n            headers:{\"Content-type\":\"application/x-www-form-urlencoded\"},\n            body:\"type=1&page=1&num=20\"\n        }).then(response=>{\n            return response.json()\n        }).then((responseText)=>{\n            const arr1=responseText.slice(0,8)\n            const arr2=responseText.slice(10)\n            const arr=[...arr1,...arr2]\n            const action={\n                type:USERLIST,\n                value:arr\n            }\n            dispatch(action)\n        })\n    }\n}\n// 按钮点击查询的功能\nexport const selectListAction=()=>{\n    return (dispatch,getState)=>{\n        const time1=new Date(getState().dateValue1).getTime()\n        const time2=new Date(getState().dateValue2).getTime()\n        const arr=getState().userlis\n        const newarr=arr.filter((elem)=>{\n            const litime=new Date(elem.create_time.slice(0,10)).getTime() \n            return litime>=time1&&litime<=time2\n        })\n        const action={\n            type:SELECTLIST,\n            value:newarr\n        }\n        dispatch(action)\n    }\n}\n//将日期1的值传入到state中\nexport const showDate1Action=(e)=>{\n    return (dispatch)=>{\n        const action={\n            type:SHOWDATE1,\n            value:e.target.value\n        }\n        dispatch(action)\n    }\n}\n//将日期2的值传入到state中\nexport const showDate2Action=(e)=>{\n    return (dispatch)=>{\n        const action={\n            type:SHOWDATE2,\n            value:e.target.value\n        }\n        dispatch(action)\n    }\n}\n//根据查询的数据选择本页展示几条数据\nexport const selectDateAction=(e)=>{\n    return (dispatch,getState)=>{\n        let pshow= Number(e.target.value)  \n        let pcount=getState().selectlis.length\n        let arr=getState().selectlis\n        //初始化下一页数字为1\n        const action={\n            type:INITIALIZE,\n            pshow\n        }\n        dispatch(action)  \n        //判断当前页面有几条数据\n        if(pcount/pshow<=3&&pcount/pshow>2){\n            const arr1=arr.slice(0,pshow)\n            const arr2=arr.slice(pshow,2*pshow)\n            const arr3=arr.slice(2*pshow)\n            const action={\n                type:PAGE3,\n                arr1,arr2,arr3\n            }\n            dispatch(action)\n        }\n        else if(pcount/pshow>1&&pcount/pshow<=2){\n            const arr4=arr.slice(0,pshow)\n            const arr5=arr.slice(pshow) \n            const action={\n                type:PAGE2,\n                arr4,arr5\n            }\n            dispatch(action)\n        }\n        else{\n            const arr6=arr.slice(0,arr.lenth)\n            const action={\n                type:PAGE1,\n                arr6\n            }\n            dispatch(action)\n        }\n    }\n}\n//按钮点击上一页\nexport const prevPageAction=()=>{\n    return (dispatch,getState)=>{\n        let prevpage=getState().prevpage\n        const arrPage1=getState().arr1\n        const arrPage2=getState().arr2\n        const arrPage3=getState().arr3\n        \n        if(prevpage>1){\n            prevpage--\n            const action={\n                type:PREVPAGE1,\n                prevpage\n            }\n            dispatch(action)\n        }\n        if(prevpage===1){\n            const action={\n                type:PREVPAGE2,\n                arrPage1\n            }\n            dispatch(action)\n            \n        }\n        else if(prevpage===2){\n            const action={\n                type:PREVPAGE3,\n                arrPage2\n            }\n            dispatch(action)\n        }\n        else{\n            const action={\n                type:PREVPAGE4,\n                arrPage3\n            }\n            dispatch(action)\n        }\n    }\n}\n//按钮点击下一页\nexport const nextPageAction=()=>{\n    return (dispatch,getState)=>{\n        let prevpage=getState().prevpage\n        let nextpage=getState().nextpage\n        const arrPage2=getState().arr2\n        const arrPage3=getState().arr3\n        if(prevpage<nextpage){\n            prevpage++\n            const action={\n                type:NEXTPAGE1,\n                prevpage\n            }\n            dispatch(action)\n        }\n        if(prevpage===3){\n            const action={\n                type:NEXTPAGE2,\n                arrPage3\n            }\n            dispatch(action)\n        }\n        if(prevpage===2){\n            const action={\n                type:NEXTPAGE3,\n                arrPage2\n            }\n            dispatch(action)\n        }\n        \n    }\n}\n//计算器数字拼接\nexport const showNumberAction=(e)=>{\n    return (dispatch,getState)=>{\n        const arr=getState().shownumber\n        const value=e.target.innerHTML\n        arr.push(value)\n        const action={\n            type:SHOWNUMBER,\n            arr\n        }\n        dispatch(action)\n    }\n}\n//给数字加﹣号\nexport const comparyNumberAction=()=>{\n    return (dispatch,getState)=>{\n        let arrAdd=[\"-\"]\n        //获得当前数组\n        let arr=getState().shownumber\n        //合并成一条字符串 \n        let str=arr.join(\"\")\n        if(arr.length===0){\n            return \n        }\n        //判断当前字符串大于0\n        //eslint-disable-next-line\n        if(Number(str)>0&&Number(str)!==NaN){\n            const action={\n                type:COMPARYNUMBER1,\n                arr:arrAdd.concat(arr)\n            }\n            dispatch(action)\n        } \n        //如果当前字符串小于0  \n        //eslint-disable-next-line\n        if(Number(str)<0&&Number(str)!==NaN){\n            const newArr=arr.slice(1)\n            const action={\n                type:COMPARYNUMBER2,\n                arr:newArr\n            }\n            dispatch(action)\n        } \n    }\n}\n//清空显示屏\nexport const clearNumberAction=()=>{\n    return (dispatch)=>{\n        const arr=[]\n        const action={\n            type:CLEARNUMBER,\n            arr\n        }\n        dispatch(action)\n    }\n}\n//对于0的处理\nexport const showZeroAction=(e)=>{\n    return (dispatch,getState)=>{\n        let arr=getState().shownumber\n        const newValue=e.target.innerHTML\n        \n        if(arr[0]!==\"0\"){\n            arr.push(newValue)\n            const action={\n                type:SHOWZERO,\n                arr\n            }\n            dispatch(action)\n        }\n    }\n}\n//对于点的处理\nexport const showCircleAction=(e)=>{\n    return (dispatch,getState)=>{\n        let arr=getState().shownumber\n        const newValue=e.target.innerHTML\n        if(arr[0]!==\".\"&&arr[arr.length-1]!==\".\"){\n            arr.push(newValue)\n            const action={\n                type:SHOWCIRCLE,\n                arr\n            }\n            dispatch(action)\n        }\n    }\n}\n//计算结果的处理\nexport const showResultAction=()=>{\n    return (dispatch,getState)=>{\n        //显示结果\n        const action={\n            type:SHOWANIMATE,\n            display:\"block\"\n        }\n        this.setState({display:\"block\"})\n        //获得当前数组\n        let arr=this.state.result\n        let str=arr.join(\"\") \n        //判断当前字符串中有没有 乘号和除号  有乘号和除号全部替换成 对应的符号\n        try{\n            if(str.indexOf(\"×\")!==-1 ||str.indexOf(\"÷\")!==-1){\n                //乘法的时候将显示屏中所有的乘号都替换成*\n                const str1=str.replace(/×/g,\"*\")\n                str=str1.replace(/÷/g,\"/\")\n            }\n            //eslint-disable-next-line\n            let str3=eval(str)\n            let newArr=[str3]\n            setTimeout(()=>{this.setState({result:newArr,display:\"none\"})},1500)\n\n        }\n        catch (error) {\n            const newArr=[].push(error)\n            setTimeout(()=>{\n                this.setState({result:newArr})\n            },1500)\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}