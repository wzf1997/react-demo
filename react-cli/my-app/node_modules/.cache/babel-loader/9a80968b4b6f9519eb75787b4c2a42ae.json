{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/react-cli/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './11.css';\nimport Calcshow from \"./Calcshow\";\nimport Calccount from \"./Calccount\";\n\nclass Calc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Calcshow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(Calccount, {\n      onClick: this.solve,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n  solve(e) {\n    console.log(1); // 获取表格标签 并为表格标签绑定事件函数 子元素通过冒泡共享父元素的函数\n\n    const show = document.getElementById(\"show\");\n    const animate = document.getElementById(\"animate\"); //   用e.target 代替this 获得目标元素\n\n    let td = e.target;\n    console.log(show.innerHTML);\n\n    if (td.nodeName === \"TD\") {\n      switch (td.innerHTML) {\n        case \"AC\":\n          show.innerHTML = \"\";\n          break;\n\n        case '.':\n          if (show.innerHTML.length !== 0) {\n            show.innerHTML += \".\";\n          }\n\n          break;\n\n        case \"=\":\n          //  首先先加载动画  然后1.5s后 执行计算事件\n          first().then(second);\n          break;\n\n        case \"\":\n          e.stopPropagation();\n          break;\n\n        case \"+/-\":\n          //   判断number  的类型  来显示 相应的值\n          let number = Number(show.innerHTML);\n\n          if (number < 0) {\n            show.innerHTML = Math.abs(number);\n          } else if (number > 0) {\n            show.innerHTML = \"-\" + show.innerHTML;\n          } else if (number === 0) {\n            show.innerHTML = \"0\";\n          } else {\n            show.innerHTML = show.innerHTML + \"-\";\n          }\n\n          break;\n        //    其他的td \n\n        default:\n          show.innerHTML += td.innerHTML;\n      }\n    } //  定义一个计算函数\n\n\n    function calc() {\n      let result = \"\";\n\n      if (show.innerHTML !== \"\") {\n        try {\n          if (show.innerHTML.indexOf(\"×\") !== -1 || show.innerHTML.indexOf(\"÷\") !== -1) {\n            //    乘法的时候  将显示屏中所有的乘号都替换成*\n            let str2 = \"\";\n            const str1 = show.innerHTML.replace(/×/g, \"*\");\n            str2 = str1.replace(/÷/g, \"/\");\n            show.innerHTML = str2;\n          } // eslint-disable-next-line\n\n\n          result = eval(show.innerHTML);\n          show.innerHTML = result.toFixed(2);\n        } catch (err) {\n          show.innerHTML = err;\n        }\n      }\n\n      return show.innerHTML;\n    } // \n\n\n    function first() {\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          console.log(1);\n          animate.innerHTML = \"\\n                    <div class=\\\"main\\\">\\n  <div class=\\\"loadEffect\\\">\\n          <span></span>\\n          <span></span>\\n          <span></span>\\n          <span></span>\\n          <span></span>\\n          <span></span>\\n          <span></span>\\n          <span></span>\\n          <span></span>\\n          <span></span>\\n          <span></span>\\n          <span></span>\\n  </div>\\n</div>\";\n          console.log(animate.innerHTML);\n          resolve();\n        }, 1040);\n      });\n    }\n\n    function second() {\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          console.log(2);\n          animate.innerHTML = \"\";\n          show.innerHTML = calc();\n          resolve();\n        }, 2040);\n      });\n    }\n  }\n\n}\n\nReactDOM.render(React.createElement(Calc, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/apple/Desktop/react-cli/my-app/src/index.js"],"names":["React","ReactDOM","Calcshow","Calccount","Calc","Component","constructor","props","state","render","solve","e","console","log","show","document","getElementById","animate","td","target","innerHTML","nodeName","length","first","then","second","stopPropagation","number","Number","Math","abs","calc","result","indexOf","str2","str1","replace","eval","toFixed","err","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './11.css';\r\nimport  Calcshow  from\"./Calcshow\"\r\nimport  Calccount  from\"./Calccount\"  \r\nclass Calc extends React.Component{\r\n            constructor(props){\r\n                super(props)\r\n                this.state={\r\n\r\n                }\r\n            }\r\n          render(){\r\n                return  <div>\r\n                       <Calcshow></Calcshow>\r\n                       <Calccount  onClick={ this.solve}></Calccount>\r\n                        </div>\r\n          }\r\n\r\n          solve(e){\r\n      console.log(1)\r\n    // 获取表格标签 并为表格标签绑定事件函数 子元素通过冒泡共享父元素的函数\r\n      \r\n      const show=document.getElementById(\"show\")\r\n      const animate=document.getElementById(\"animate\")\r\n      \r\n  \r\n      //   用e.target 代替this 获得目标元素\r\n        let  td=e.target;\r\n        console.log(show.innerHTML)\r\n        if(td.nodeName===\"TD\"){\r\n             switch(td.innerHTML){\r\n                 case \"AC\": \r\n                   show.innerHTML=\"\"\r\n                   break;\r\n                 case '.':\r\n                     if(show.innerHTML.length!==0){\r\n                          show.innerHTML+=\".\"\r\n                     }\r\n                      break;\r\n                  case \"=\":  \r\n                      //  首先先加载动画  然后1.5s后 执行计算事件\r\n                     \r\n                        first().then(second)\r\n                       \r\n                  \r\n                \r\n                  break;\r\n                  case \"\": \r\n                       e.stopPropagation()\r\n                       break;\r\n                  case \"+/-\": \r\n                  //   判断number  的类型  来显示 相应的值\r\n                       let number=Number(show.innerHTML)\r\n                       \r\n                             if(number<0){\r\n                                  show.innerHTML=Math.abs(number)\r\n                             }else if(number>0){\r\n                                    show.innerHTML=\"-\"+show.innerHTML\r\n                             }else if(number===0){\r\n                                    show.innerHTML=\"0\"\r\n                             }else{\r\n                                 show.innerHTML=show.innerHTML+\"-\"\r\n                             }\r\n                  break;\r\n                  //    其他的td \r\n              default:  \r\n                   \r\n                  show.innerHTML+=td.innerHTML\r\n             }\r\n          \r\n\r\n        } \r\n\r\n       \r\n     \r\n//  定义一个计算函数\r\n  function  calc(){\r\n    let  result=\"\"\r\n\r\n      if( show.innerHTML!==\"\"){\r\n                       try{\r\n                             if(show.innerHTML.indexOf(\"×\")!==-1 ||show.innerHTML.indexOf(\"÷\")!==-1 ){\r\n                              //    乘法的时候  将显示屏中所有的乘号都替换成*\r\n                              let str2=\"\"\r\n                              \r\n                                 const str1=show.innerHTML.replace(/×/g,\"*\")\r\n                                   str2=str1.replace(/÷/g,\"/\")\r\n                                   show.innerHTML=str2\r\n                             }\r\n                             // eslint-disable-next-line\r\n                           result=eval(show.innerHTML)\r\n                            show.innerHTML=result.toFixed(2)\r\n                       }catch(err){\r\n                           show.innerHTML=err\r\n                       }\r\n                   }  \r\n                   return  show.innerHTML\r\n  }  \r\n  // \r\n     function first(){\r\n          return new Promise(  function(resolve){\r\n              setTimeout(function(){\r\n                  console.log(1)\r\n                    animate.innerHTML=`\r\n                    <div class=\"main\">\r\n  <div class=\"loadEffect\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n  </div>\r\n</div>`\r\n      console.log(animate.innerHTML)\r\n          resolve()\r\n              },1040)\r\n\r\n          })\r\n     }\r\n     function second(){\r\n          return new Promise(  function(resolve){\r\n              setTimeout(function(){\r\n                  console.log(2)\r\n                    animate.innerHTML=\"\"\r\n                     show.innerHTML=calc() \r\n                    resolve()\r\n              },2040)\r\n\r\n          })\r\n     }\r\n\r\n     \r\n}\r\n      \r\n      }\r\n\r\n  \r\n  ReactDOM.render(\r\n    <Calc/>,\r\n    document.getElementById('root')\r\n  );\r\n  "]},"metadata":{},"sourceType":"module"}